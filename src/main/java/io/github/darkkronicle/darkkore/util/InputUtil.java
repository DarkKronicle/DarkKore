package io.github.darkkronicle.darkkore.util;

import lombok.experimental.UtilityClass;
import org.lwjgl.glfw.GLFW;

import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

@UtilityClass
public class InputUtil {

    public final int MOUSE_LEFT = GLFW.GLFW_MOUSE_BUTTON_LEFT - 10;
    public final int MOUSE_RIGHT = GLFW.GLFW_MOUSE_BUTTON_RIGHT - 10;
    public final int MOUSE_MIDDLE = GLFW.GLFW_MOUSE_BUTTON_MIDDLE - 10;

    public final Integer[] KEYS = {
            GLFW.GLFW_MOUSE_BUTTON_LEFT - 10,
            GLFW.GLFW_MOUSE_BUTTON_RIGHT - 10,
            GLFW.GLFW_MOUSE_BUTTON_MIDDLE - 10,
            GLFW.GLFW_MOUSE_BUTTON_4 - 10,
            GLFW.GLFW_MOUSE_BUTTON_5 - 10,
            GLFW.GLFW_MOUSE_BUTTON_6 - 10,
            GLFW.GLFW_MOUSE_BUTTON_7 - 10,
            GLFW.GLFW_MOUSE_BUTTON_8 - 10,
            GLFW.GLFW_KEY_UNKNOWN, GLFW.GLFW_KEY_SPACE, GLFW.GLFW_KEY_APOSTROPHE,
            GLFW.GLFW_KEY_COMMA, GLFW.GLFW_KEY_MINUS, GLFW.GLFW_KEY_PERIOD,
            GLFW.GLFW_KEY_SLASH, GLFW.GLFW_KEY_0, GLFW.GLFW_KEY_1, GLFW.GLFW_KEY_2,
            GLFW.GLFW_KEY_3, GLFW.GLFW_KEY_4, GLFW.GLFW_KEY_5, GLFW.GLFW_KEY_6,
            GLFW.GLFW_KEY_7, GLFW.GLFW_KEY_8, GLFW.GLFW_KEY_9, GLFW.GLFW_KEY_SEMICOLON,
            GLFW.GLFW_KEY_EQUAL, GLFW.GLFW_KEY_A, GLFW.GLFW_KEY_B, GLFW.GLFW_KEY_C,
            GLFW.GLFW_KEY_D, GLFW.GLFW_KEY_E, GLFW.GLFW_KEY_F, GLFW.GLFW_KEY_G,
            GLFW.GLFW_KEY_H, GLFW.GLFW_KEY_I, GLFW.GLFW_KEY_J, GLFW.GLFW_KEY_K,
            GLFW.GLFW_KEY_L, GLFW.GLFW_KEY_M, GLFW.GLFW_KEY_N, GLFW.GLFW_KEY_O,
            GLFW.GLFW_KEY_P, GLFW.GLFW_KEY_Q, GLFW.GLFW_KEY_R, GLFW.GLFW_KEY_S,
            GLFW.GLFW_KEY_T, GLFW.GLFW_KEY_U, GLFW.GLFW_KEY_V, GLFW.GLFW_KEY_W,
            GLFW.GLFW_KEY_X, GLFW.GLFW_KEY_Y, GLFW.GLFW_KEY_Z, GLFW.GLFW_KEY_LEFT_BRACKET,
            GLFW.GLFW_KEY_BACKSLASH, GLFW.GLFW_KEY_RIGHT_BRACKET, GLFW.GLFW_KEY_GRAVE_ACCENT,
            GLFW.GLFW_KEY_WORLD_1, GLFW.GLFW_KEY_WORLD_2, GLFW.GLFW_KEY_ESCAPE,
            GLFW.GLFW_KEY_ENTER, GLFW.GLFW_KEY_TAB, GLFW.GLFW_KEY_BACKSPACE,
            GLFW.GLFW_KEY_INSERT, GLFW.GLFW_KEY_DELETE, GLFW.GLFW_KEY_RIGHT,
            GLFW.GLFW_KEY_LEFT, GLFW.GLFW_KEY_DOWN, GLFW.GLFW_KEY_UP,
            GLFW.GLFW_KEY_PAGE_UP, GLFW.GLFW_KEY_PAGE_DOWN, GLFW.GLFW_KEY_HOME,
            GLFW.GLFW_KEY_END, GLFW.GLFW_KEY_CAPS_LOCK, GLFW.GLFW_KEY_SCROLL_LOCK,
            GLFW.GLFW_KEY_NUM_LOCK, GLFW.GLFW_KEY_PRINT_SCREEN, GLFW.GLFW_KEY_PAUSE,
            GLFW.GLFW_KEY_F1, GLFW.GLFW_KEY_F2, GLFW.GLFW_KEY_F3, GLFW.GLFW_KEY_F4,
            GLFW.GLFW_KEY_F5, GLFW.GLFW_KEY_F6, GLFW.GLFW_KEY_F7, GLFW.GLFW_KEY_F8,
            GLFW.GLFW_KEY_F9, GLFW.GLFW_KEY_F10, GLFW.GLFW_KEY_F11, GLFW.GLFW_KEY_F12,
            GLFW.GLFW_KEY_F13, GLFW.GLFW_KEY_F14, GLFW.GLFW_KEY_F15, GLFW.GLFW_KEY_F16,
            GLFW.GLFW_KEY_F17, GLFW.GLFW_KEY_F18, GLFW.GLFW_KEY_F19, GLFW.GLFW_KEY_F20,
            GLFW.GLFW_KEY_F21, GLFW.GLFW_KEY_F22, GLFW.GLFW_KEY_F23, GLFW.GLFW_KEY_F24,
            GLFW.GLFW_KEY_F25, GLFW.GLFW_KEY_KP_0, GLFW.GLFW_KEY_KP_1, GLFW.GLFW_KEY_KP_2,
            GLFW.GLFW_KEY_KP_3, GLFW.GLFW_KEY_KP_4, GLFW.GLFW_KEY_KP_5, GLFW.GLFW_KEY_KP_6,
            GLFW.GLFW_KEY_KP_7, GLFW.GLFW_KEY_KP_8, GLFW.GLFW_KEY_KP_9, GLFW.GLFW_KEY_KP_DECIMAL,
            GLFW.GLFW_KEY_KP_DIVIDE, GLFW.GLFW_KEY_KP_MULTIPLY, GLFW.GLFW_KEY_KP_SUBTRACT,
            GLFW.GLFW_KEY_KP_ADD, GLFW.GLFW_KEY_KP_ENTER, GLFW.GLFW_KEY_KP_EQUAL,
            GLFW.GLFW_KEY_LEFT_SHIFT, GLFW.GLFW_KEY_LEFT_CONTROL, GLFW.GLFW_KEY_LEFT_ALT,
            GLFW.GLFW_KEY_LEFT_SUPER, GLFW.GLFW_KEY_RIGHT_SHIFT, GLFW.GLFW_KEY_RIGHT_CONTROL,
            GLFW.GLFW_KEY_RIGHT_ALT, GLFW.GLFW_KEY_RIGHT_SUPER, GLFW.GLFW_KEY_MENU, GLFW.GLFW_KEY_LAST
    };

    public final Map<String, Integer> NAMES_TO_KEY = Map.<String, Integer>ofEntries(
            Map.entry("UNKNOWN", GLFW.GLFW_KEY_UNKNOWN),
            Map.entry("SPACE", GLFW.GLFW_KEY_SPACE),
            Map.entry("APOSTROPHE", GLFW.GLFW_KEY_APOSTROPHE),
            Map.entry("COMMA", GLFW.GLFW_KEY_COMMA),
            Map.entry("MINUS", GLFW.GLFW_KEY_MINUS),
            Map.entry("PERIOD", GLFW.GLFW_KEY_PERIOD),
            Map.entry("SLASH", GLFW.GLFW_KEY_SLASH),
            Map.entry("0", GLFW.GLFW_KEY_0),
            Map.entry("1", GLFW.GLFW_KEY_1),
            Map.entry("2", GLFW.GLFW_KEY_2),
            Map.entry("3", GLFW.GLFW_KEY_3),
            Map.entry("4", GLFW.GLFW_KEY_4),
            Map.entry("5", GLFW.GLFW_KEY_5),
            Map.entry("6", GLFW.GLFW_KEY_6),
            Map.entry("7", GLFW.GLFW_KEY_7),
            Map.entry("8", GLFW.GLFW_KEY_8),
            Map.entry("9", GLFW.GLFW_KEY_9),
            Map.entry("SEMICOLON", GLFW.GLFW_KEY_SEMICOLON),
            Map.entry("EQUAL", GLFW.GLFW_KEY_EQUAL),
            Map.entry("A", GLFW.GLFW_KEY_A),
            Map.entry("B", GLFW.GLFW_KEY_B),
            Map.entry("C", GLFW.GLFW_KEY_C),
            Map.entry("D", GLFW.GLFW_KEY_D),
            Map.entry("E", GLFW.GLFW_KEY_E),
            Map.entry("F", GLFW.GLFW_KEY_F),
            Map.entry("G", GLFW.GLFW_KEY_G),
            Map.entry("H", GLFW.GLFW_KEY_H),
            Map.entry("I", GLFW.GLFW_KEY_I),
            Map.entry("J", GLFW.GLFW_KEY_J),
            Map.entry("K", GLFW.GLFW_KEY_K),
            Map.entry("L", GLFW.GLFW_KEY_L),
            Map.entry("M", GLFW.GLFW_KEY_M),
            Map.entry("N", GLFW.GLFW_KEY_N),
            Map.entry("O", GLFW.GLFW_KEY_O),
            Map.entry("P", GLFW.GLFW_KEY_P),
            Map.entry("Q", GLFW.GLFW_KEY_Q),
            Map.entry("R", GLFW.GLFW_KEY_R),
            Map.entry("S", GLFW.GLFW_KEY_S),
            Map.entry("T", GLFW.GLFW_KEY_T),
            Map.entry("U", GLFW.GLFW_KEY_U),
            Map.entry("V", GLFW.GLFW_KEY_V),
            Map.entry("W", GLFW.GLFW_KEY_W),
            Map.entry("X", GLFW.GLFW_KEY_X),
            Map.entry("Y", GLFW.GLFW_KEY_Y),
            Map.entry("Z", GLFW.GLFW_KEY_Z),
            Map.entry("LEFT_BRACKET", GLFW.GLFW_KEY_LEFT_BRACKET),
            Map.entry("BACKSLASH", GLFW.GLFW_KEY_BACKSLASH),
            Map.entry("RIGHT_BRACKET", GLFW.GLFW_KEY_RIGHT_BRACKET),
            Map.entry("GRAVE_ACCENT", GLFW.GLFW_KEY_GRAVE_ACCENT),
            Map.entry("WORLD_1", GLFW.GLFW_KEY_WORLD_1),
            Map.entry("WORLD_2", GLFW.GLFW_KEY_WORLD_2),
            Map.entry("ESCAPE", GLFW.GLFW_KEY_ESCAPE),
            Map.entry("ENTER", GLFW.GLFW_KEY_ENTER),
            Map.entry("TAB", GLFW.GLFW_KEY_TAB),
            Map.entry("BACKSPACE", GLFW.GLFW_KEY_BACKSPACE),
            Map.entry("INSERT", GLFW.GLFW_KEY_INSERT),
            Map.entry("DELETE", GLFW.GLFW_KEY_DELETE),
            Map.entry("RIGHT", GLFW.GLFW_KEY_RIGHT),
            Map.entry("LEFT", GLFW.GLFW_KEY_LEFT),
            Map.entry("DOWN", GLFW.GLFW_KEY_DOWN),
            Map.entry("UP", GLFW.GLFW_KEY_UP),
            Map.entry("PAGE_UP", GLFW.GLFW_KEY_PAGE_UP),
            Map.entry("PAGE_DOWN", GLFW.GLFW_KEY_PAGE_DOWN),
            Map.entry("HOME", GLFW.GLFW_KEY_HOME),
            Map.entry("END", GLFW.GLFW_KEY_END),
            Map.entry("CAPS_LOCK", GLFW.GLFW_KEY_CAPS_LOCK),
            Map.entry("SCROLL_LOCK", GLFW.GLFW_KEY_SCROLL_LOCK),
            Map.entry("NUM_LOCK", GLFW.GLFW_KEY_NUM_LOCK),
            Map.entry("PRINT_SCREEN", GLFW.GLFW_KEY_PRINT_SCREEN),
            Map.entry("PAUSE", GLFW.GLFW_KEY_PAUSE),
            Map.entry("F1", GLFW.GLFW_KEY_F1),
            Map.entry("F2", GLFW.GLFW_KEY_F2),
            Map.entry("F3", GLFW.GLFW_KEY_F3),
            Map.entry("F4", GLFW.GLFW_KEY_F4),
            Map.entry("F5", GLFW.GLFW_KEY_F5),
            Map.entry("F6", GLFW.GLFW_KEY_F6),
            Map.entry("F7", GLFW.GLFW_KEY_F7),
            Map.entry("F8", GLFW.GLFW_KEY_F8),
            Map.entry("F9", GLFW.GLFW_KEY_F9),
            Map.entry("F10", GLFW.GLFW_KEY_F10),
            Map.entry("F11", GLFW.GLFW_KEY_F11),
            Map.entry("F12", GLFW.GLFW_KEY_F12),
            Map.entry("F13", GLFW.GLFW_KEY_F13),
            Map.entry("F14", GLFW.GLFW_KEY_F14),
            Map.entry("F15", GLFW.GLFW_KEY_F15),
            Map.entry("F16", GLFW.GLFW_KEY_F16),
            Map.entry("F17", GLFW.GLFW_KEY_F17),
            Map.entry("F18", GLFW.GLFW_KEY_F18),
            Map.entry("F19", GLFW.GLFW_KEY_F19),
            Map.entry("F20", GLFW.GLFW_KEY_F20),
            Map.entry("F21", GLFW.GLFW_KEY_F21),
            Map.entry("F22", GLFW.GLFW_KEY_F22),
            Map.entry("F23", GLFW.GLFW_KEY_F23),
            Map.entry("F24", GLFW.GLFW_KEY_F24),
            Map.entry("F25", GLFW.GLFW_KEY_F25),
            Map.entry("KP_0", GLFW.GLFW_KEY_KP_0),
            Map.entry("KP_1", GLFW.GLFW_KEY_KP_1),
            Map.entry("KP_2", GLFW.GLFW_KEY_KP_2),
            Map.entry("KP_3", GLFW.GLFW_KEY_KP_3),
            Map.entry("KP_4", GLFW.GLFW_KEY_KP_4),
            Map.entry("KP_5", GLFW.GLFW_KEY_KP_5),
            Map.entry("KP_6", GLFW.GLFW_KEY_KP_6),
            Map.entry("KP_7", GLFW.GLFW_KEY_KP_7),
            Map.entry("KP_8", GLFW.GLFW_KEY_KP_8),
            Map.entry("KP_9", GLFW.GLFW_KEY_KP_9),
            Map.entry("KP_DECIMAL", GLFW.GLFW_KEY_KP_DECIMAL),
            Map.entry("KP_DIVIDE", GLFW.GLFW_KEY_KP_DIVIDE),
            Map.entry("KP_MULTIPLY", GLFW.GLFW_KEY_KP_MULTIPLY),
            Map.entry("KP_SUBTRACT", GLFW.GLFW_KEY_KP_SUBTRACT),
            Map.entry("KP_ADD", GLFW.GLFW_KEY_KP_ADD),
            Map.entry("KP_ENTER", GLFW.GLFW_KEY_KP_ENTER),
            Map.entry("KP_EQUAL", GLFW.GLFW_KEY_KP_EQUAL),
            Map.entry("LEFT_SHIFT", GLFW.GLFW_KEY_LEFT_SHIFT),
            Map.entry("LEFT_CONTROL", GLFW.GLFW_KEY_LEFT_CONTROL),
            Map.entry("LEFT_ALT", GLFW.GLFW_KEY_LEFT_ALT),
            Map.entry("LEFT_SUPER", GLFW.GLFW_KEY_LEFT_SUPER),
            Map.entry("RIGHT_SHIFT", GLFW.GLFW_KEY_RIGHT_SHIFT),
            Map.entry("RIGHT_CONTROL", GLFW.GLFW_KEY_RIGHT_CONTROL),
            Map.entry("RIGHT_ALT", GLFW.GLFW_KEY_RIGHT_ALT),
            Map.entry("RIGHT_SUPER", GLFW.GLFW_KEY_RIGHT_SUPER),
            Map.entry("MENU", GLFW.GLFW_KEY_MENU),
            Map.entry("LAST", GLFW.GLFW_KEY_LAST),
            Map.entry("MB_LEFT", GLFW.GLFW_MOUSE_BUTTON_LEFT - 10),
            Map.entry("MB_RIGHT", GLFW.GLFW_MOUSE_BUTTON_RIGHT - 10),
            Map.entry("MB_MIDDLE", GLFW.GLFW_MOUSE_BUTTON_MIDDLE - 10),
            Map.entry("MB_4", GLFW.GLFW_MOUSE_BUTTON_4 - 10),
            Map.entry("MB_5", GLFW.GLFW_MOUSE_BUTTON_5 - 10),
            Map.entry("MB_6", GLFW.GLFW_MOUSE_BUTTON_6 - 10),
            Map.entry("MB_7", GLFW.GLFW_MOUSE_BUTTON_7 - 10),
            Map.entry("MB_8", GLFW.GLFW_MOUSE_BUTTON_8 - 10)
    );

    public int getKeyCode(String name) {
        return NAMES_TO_KEY.get(name.toUpperCase(Locale.ROOT));
    }

    public String getKeyName(int key) {
        return NAMES_TO_KEY.entrySet().stream().filter(entry -> entry.getValue() == key).findFirst().map(Map.Entry::getKey).orElse("UNKNOWN");
    }

}
